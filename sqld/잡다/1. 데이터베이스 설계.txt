1. 데이터베이스 설계의 개념
  1) 사용자의 요구를 분석하여 데이터베이스의 구조에 맞게 변형한 후 
     특정 DBMS로 데이터베이스를 구현하여 일반 사용자들이 사용하게 하는 것

2. 데이터베이스 설계 시 고려사항
  1) 무결성
      - 삽입, 삭제, 갱신 등의 연산 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야 함
  2) 일관성
      - 데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝까지 변함없이 일정해야 함
  3) 회복
      - 시스템에 장애가 발생했을 때, 장애 발생 직전의 상태로 복구할 수 있어야 함
  4) 보안
      - 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야 함
  5) 효율성
      - 응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야 함
  6) 데이터베이스 확장    
      - 데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야 함

3. 데이터베이스 설계 순서(데이터 모델링)
  1) 요구 조건 분석
  2) 개념적 설계
  3) 논리적 설계
  4) 물리적 설계
  5) 구현

4. 요구 조건 분석
  1) 데이터베이스를 사용할 사람들로부터 필요한 용도 파악하는 것
  2) 수행 업무, 데이터의 종류, 용도, 처리형태, 흐름, 제약조건 수집
  3) 요구 조건 명세 작성

5. 개념적 설계(정보 모델링, 개념화)
  1) 현실세계에 대한 인식을 추상적 개념으로 표현
  2) 개념 스키마 모델링과 트랜잭션 모델링 병행 수행
  3) 요구 조건 명세를 DBMS에 독립적인 E-R 다이어그램 작성
  4) DBMS에 독립적인 개념 스키마 설계

6. 논리적 설계(데이터 모델링)
  1) 특정 DBMS가 지원하는 논리적 자료 구조로 매핑
  2) 데이터로 모델화함
  3) 개념 스키마를 평가 및 정제하고 DBMS에 따라 서로 다른 논리적 스키마를 설계
  4) 트랜잭션의 인터페이스를 설계
  5) 관계형 데이터베이스라면 테이블을 설계하는 단계

7. 물리적 설계(데이터 구조화)
  1) 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환
  2) 파일의 저장 구조 및 액세스 경로 결정
  3) 고려사항
    - 트랜잭션 처리량, 응답 시간, 디스크 용량, 저장 공간의 효율화

8. 데이터베이스 구현
  1) 데이터베이스 스키마를 파일로 생성
  2) 특정 DBMS의 DDL을 이용해 스키마를 기술 후 컴파일하여 빈 데이터베이스 파일 생성
  3) 데이터 입력, 트랜잭션 작성, DBMS에 접근하기 위한 응용 프로그램 작성